name: Build executables (Windows/Linux)

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019, ubuntu-18.04]
        include:
        - os: ubuntu-18.04
          TARGET: linux
        - os: windows-2019
          TARGET: windows
      # Disable fail-fast; we want results from all OSes even if one fails.
      fail-fast: false

    steps:
    - uses: actions/checkout@v2
      with:
        path: project
    - uses: actions/setup-java@v1
      with:
        java-version: 11.0
    - uses: subosito/flutter-action@v1
      with:
        channel: 'stable'
    - uses: actions/checkout@v2
      with:
        path: flutter
        repository: flutter/flutter
        ref: master
        # Shallow clones don't work; see https://github.com/flutter/flutter/issues/18532
        fetch-depth: 0
    - name: Add Flutter tags
      # Add tags, which are also necessary for version checks to work.
      run: |
        git fetch origin +refs/tags/*:refs/tags/*
      working-directory: ${{ github.workspace }}/flutter
# Windows
    - name: Add Flutter to path - Windows
      if: startsWith(matrix.os, 'windows')
      run: echo "$env:GITHUB_WORKSPACE\flutter\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
# MacOS/Linux
    - name: Add Flutter to path - macOS/Linux
      if: startsWith(matrix.os, 'macOS') || startsWith(matrix.os, 'ubuntu')
      run: echo "$GITHUB_WORKSPACE/flutter/bin" >> $GITHUB_PATH
# Linux
    - name: Install Linux dependencies
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libx11-dev pkg-config cmake ninja-build libblkid-dev liblzma-dev
# Common
    - name: Enable desktop support
      run: |
        flutter config --enable-linux-desktop
        flutter config --enable-windows-desktop
    - name: Doctor
      # Run doctor, for ease of debugging any issues.
      run: flutter doctor -v
    - name: Build Release
      run: |
        flutter create --platforms=windows .
        flutter packages get
        flutter pub run build_runner build
        flutter build -v ${{matrix.TARGET}} --release          
      working-directory: ${{ github.workspace }}/project

#####################
# Windows Artifacts
#####################
    - name: Copy essentials to Windows artifacs (Release)
      if: startsWith(matrix.os, 'windows')
      run: |
        cp -Path ${{ github.workspace }}/project/build_dependencies/windows/* ${{ github.workspace }}/project/build/windows/runner/Release/
        mkdir ${{ github.workspace }}/project/build/windows/runner/pomodoro_release/pomodoro
        mv -Path ${{ github.workspace }}/project/build/windows/runner/Release/* ${{ github.workspace }}/project/build/windows/runner/pomodoro_release/pomodoro
      working-directory: ${{ github.workspace }}/project

    - name: Upload Windows artifaces (Release)
      if: startsWith(matrix.os, 'windows')
      uses: actions/upload-artifact@v2
      with:
        name: windows-release
        path: ${{ github.workspace }}/project/build/windows/runner/pomodoro_release/pomodoro

#####################
# Linux Artifacts
#####################
    - name: Copy essentials to Linux artifacs and package (Release)
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        cp -r ${{ github.workspace }}/project/build_dependencies/linux ${{ github.workspace }}/project/build/linux/x64/release/pomodoro
        mv ${{ github.workspace }}/project/build/linux/x64/release/bundle/* ${{ github.workspace }}/project/build/linux/x64/release/pomodoro/usr/local/lib/pomodoro/
        dpkg-deb --build --root-owner-group ${{ github.workspace }}/project/build/linux/x64/release/pomodoro
      working-directory: ${{ github.workspace }}/project
      
    - name: Upload Debian artifaces (Release)
      if: startsWith(matrix.os, 'ubuntu')
      uses: actions/upload-artifact@v2
      with:
        name: debian-release
        path: ${{ github.workspace }}/project/build/linux/x64/release/pomodoro.deb
              
    - name: Upload Arch artifaces (Release)
      if: startsWith(matrix.os, 'ubuntu')
      uses: actions/upload-artifact@v2
      with:
        name: arch-release
        path: ${{ github.workspace }}/project/build/linux/x64/release/pomodoro/usr/local/lib/pomodoro/
